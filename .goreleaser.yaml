# SPDX-FileCopyrightText: 2025 Buoyant Inc.
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2022-2025 Buoyant Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.  You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Docs for goreleaser are at https://goreleaser.com.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

# Allow overriding the registry and image name with environment variables.
env:
  - REGISTRY={{ if index .Env "REGISTRY"  }}{{ .Env.REGISTRY }}{{ else }}ghcr.io/buoyantio{{ end }}
  - IMAGE_NAME={{ if index .Env "IMAGE_NAME"  }}{{ .Env.IMAGE_NAME }}{{ else }}faces{{ end }}
  - EXTERNAL_BASE={{ if index .Env "EXTERNAL_BASE"  }}{{ .Env.EXTERNAL_BASE }}{{ else }}ghcr.io/buoyantio/demo-external-base:0.3.0{{ end }}
  - BEL_EXTERNAL_BASE={{ if index .Env "BEL_EXTERNAL_BASE"  }}{{ .Env.BEL_EXTERNAL_BASE }}{{ else }}ghcr.io/buoyantio/demo-bel-external-base:0.3.0{{ end }}

before:
  hooks:
    - go mod tidy
    # Make the chart as part of the build process.
    - make VERSION={{ .Version }} chart

archives:
  - id: generic
    name_template: '{{ .ProjectName }}_generic_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    builds:
      - generic-workload
      - generic-color
  - id: pi
    name_template: '{{ .ProjectName }}_pi_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    builds:
      - pi

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

builds:
- binary: gui-workload
  env:
  - CGO_ENABLED=0
  goarch:
  - arm64
  - amd64
  goos:
  - linux
  id: generic-gui
  main: ./cmd/generic/gui
- binary: face-workload
  env:
  - CGO_ENABLED=0
  goarch:
  - arm64
  - amd64
  goos:
  - linux
  id: generic-face
  main: ./cmd/generic/face
- binary: color-workload
  env:
  - CGO_ENABLED=0
  goarch:
  - arm64
  - amd64
  goos:
  - linux
  id: generic-color
  main: ./cmd/generic/color
- binary: color-workload
  env:
  - CGO_ENABLED=0
  goarch:
  - arm64
  goos:
  - linux
  id: pi-color
  main: ./cmd/pi/color
- binary: smiley-workload
  env:
  - CGO_ENABLED=0
  goarch:
  - arm64
  - amd64
  goos:
  - linux
  id: generic-smiley
  main: ./cmd/generic/smiley
- binary: smiley-workload
  env:
  - CGO_ENABLED=0
  goarch:
  - arm64
  goos:
  - linux
  id: pi-smiley
  main: ./cmd/pi/smiley
docker_manifests:
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:{{ .Version }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:{{ .Version }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:{{ .Version
    }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:{{ .Version
    }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:{{ .Version }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:{{ .Version
    }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:{{
    .Version }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-color:{{ .Version }}-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-color:{{ .Version }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-color:latest-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-color:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-color:{{ .Version }}-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-color:{{ .Version
    }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-color:latest-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-color:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:{{ .Version }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:{{ .Version
    }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:{{ .Version }}-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:{{
    .Version }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:latest-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:latest-amd64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-smiley:{{ .Version }}-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-smiley:{{ .Version
    }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-smiley:latest-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-smiley:latest'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-smiley:{{ .Version }}-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-smiley:{{ .Version
    }}'
  push_flags:
  - --insecure
- create_flags:
  - --insecure
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-smiley:latest-arm64'
  name_template: '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-smiley:latest'
  push_flags:
  - --insecure
dockers:
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=WORKLOAD=gui-workload
  dockerfile: Dockerfiles/Dockerfile.gui
  extra_files:
  - assets/html
  goarch: arm64
  goos: linux
  ids:
  - generic-gui
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=WORKLOAD=gui-workload
  dockerfile: Dockerfiles/Dockerfile.gui
  extra_files:
  - assets/html
  goarch: amd64
  goos: linux
  ids:
  - generic-gui
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-gui:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=WORKLOAD=face-workload
  dockerfile: Dockerfiles/Dockerfile.workload
  goarch: arm64
  goos: linux
  ids:
  - generic-face
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=WORKLOAD=face-workload
  dockerfile: Dockerfiles/Dockerfile.workload
  goarch: amd64
  goos: linux
  ids:
  - generic-face
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-face:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=face-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: arm64
  goos: linux
  ids:
  - generic-face
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=face-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: amd64
  goos: linux
  ids:
  - generic-face
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-face:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=face-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: arm64
  goos: linux
  ids:
  - generic-face
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=face-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: amd64
  goos: linux
  ids:
  - generic-face
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-face:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.workload
  goarch: arm64
  goos: linux
  ids:
  - generic-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.workload
  goarch: amd64
  goos: linux
  ids:
  - generic-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-color:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: arm64
  goos: linux
  ids:
  - generic-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: amd64
  goos: linux
  ids:
  - generic-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-color:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: arm64
  goos: linux
  ids:
  - generic-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: amd64
  goos: linux
  ids:
  - generic-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-color:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: arm64
  goos: linux
  ids:
  - pi-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-color:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=color-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: arm64
  goos: linux
  ids:
  - pi-color
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-color:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-color:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.workload
  goarch: arm64
  goos: linux
  ids:
  - generic-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.workload
  goarch: amd64
  goos: linux
  ids:
  - generic-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-smiley:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: arm64
  goos: linux
  ids:
  - generic-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: amd64
  goos: linux
  ids:
  - generic-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-external-smiley:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: arm64
  goos: linux
  ids:
  - generic-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/amd64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: amd64
  goos: linux
  ids:
  - generic-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:{{ .Version }}-amd64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-external-smiley:latest-amd64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.external-workload
  goarch: arm64
  goos: linux
  ids:
  - pi-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-pi-smiley:latest-arm64'
  use: buildx
- build_flag_templates:
  - --platform=linux/arm64
  - --build-arg=EXTERNAL_BASE={{ .Env.BEL_EXTERNAL_BASE }}
  - --build-arg=WORKLOAD=smiley-workload
  dockerfile: Dockerfiles/Dockerfile.bel-external-workload
  goarch: arm64
  goos: linux
  ids:
  - pi-smiley
  image_templates:
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-smiley:{{ .Version }}-arm64'
  - '{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}-bel-pi-smiley:latest-arm64'
  use: buildx

